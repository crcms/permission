<?php

namespace CrCms\Permission;

use CrCms\Foundation\Providers\ModuleServiceProvider;
use CrCms\Permission\Http\Middleware\UserPermissionMiddleware;

/**
 * Class PermissionServiceProvider
 * @package CrCms\Permission
 */
class PermissionServiceProvider extends ModuleServiceProvider
{
    /**
     * @var string
     */
    protected $basePath = __DIR__ . DIRECTORY_SEPARATOR . '..' . DIRECTORY_SEPARATOR;

    /**
     * @var string
     */
    protected $name = 'permission';

    /**
     * @return void
     */
    public function boot(): void
    {
        parent::boot(); // TODO: Change the autogenerated stub

        $this->publishes([
            $this->basePath.'config/config.php' => config_path($this->name.'.php'),
        ]);

        //load middleware alias
        $this->aliasMiddleware();
    }

    protected function map(): void
    {
    }

    /**
     * @return void
     */
    public function register(): void
    {
        parent::register(); // TODO: Change the autogenerated stub
    }

    /**
     * 权限事件监听
     *
     * @return void
     */
    protected function repositoryListeners(): void
    {

    }

    /**
     * Alias the middleware.
     *
     * @return void
     */
    protected function aliasMiddleware()
    {
        $router = $this->app['router'];

        $routerMiddleware = [
            'checkUserPermission' => UserPermissionMiddleware::class,
        ];

        foreach ($routerMiddleware as $alias => $middleware) {
            $router->aliasMiddleware($alias, $middleware);
        }
    }
}
